2023.01.02(월)
sypark@softsociety.net

setting.gradle 열어본다
프로젝트 이름만 고치면 에러남 이부분도 고쳐줘야함

build.gradle 에서 dependencies 부분이 중요 
이건 다른사람이 만든거 가져오는거임

src/main/java에 자동으로 만들어진 자바 파일이 있음
메인함수는 개발 하는데만 필요
내장서버가 있어서 올리기 전에 시험하기 위해 있음

http://www.abc.co.kr:80/xxx/yyyy/index.html
프로토콜://도메인(ip주소):포트번호/경로/경로/실행이름or파일명
포트번호: 건물의 주소라고 생각하면 됨(한 건물의 입구번호) 보통 항상 80번
경로: 하드디스크에 폴더 나눠서 저장하는 느낌

http://localhost:8888/spring1

application.properties 설정
다른프로젝트 하려면 접속 경로가 겹치지 않아야한다(8888)

MVC라고 하는 패턴을 쓴다
Model View Controller
View 는 html Controller 는 java로

src/main/java/net.softsociety~~~ 밑에 컨트롤러 파일 생성
클래스위에 @Controller라고 붙여줘야지 컨트롤러 동작을 한다

html파일들은 반드시 resources/templates 밑에 있어야한다.

최소한 콘트롤러 하나 html 하나는 있어야 한다.

server - client 관계
web server  html로만 만들면 이것만 있으면 됨
web application server(was) 
위 두개가 있어야 우리가 짠 프로그램이 웹에서 돌아간다

gradle관련해서 뭘 수정해주면 프로젝트에서 마우스 오른쪽 클릭
gradle 부분 refresh gradle 해줘야함

순서 (ppt 참조)
1. new spring starter project
2. name, java, version, package 등 설정
    도메인명 넣을때 거꾸로 (ppt보면 알것)
3. lombok, spring boot devtools, spring web, thymeleaf 설정
4. src/main/resources/application.properties 작성
    • #접속 포트번호
    server.port=8888 (새로할땐 수정)
    • #Context Path
    server.servlet.context-path=/spring1
    • #Logback 사용. 전체를 대상으로 로깅 레벨 지정
    • #단계 : error>3warn>info>debug>trace
    logging.level.root=info
    • #특정 패키지를 대상으로 로깅 레벨 지정
    logging.level.net.softsociety.spring1=debug (이름바꿀땐 .spring1 바꿔줘야함)
5. settings.gradle 확인

6. src/main/java/net.softsociety~~~ 밑에 컨트롤러 파일 생성
    indexcontroller파일 return "" 부분이랑 파일명 바꿔주기
7. templates 밑에 html 파일 생성


2023.01.03(화)

* 브라우저에서 실행할 때 http만(뒤에 s넣으면 안됨)

* 무언가 추가적인게 필요할때는 mvnresponsitory에서 가져와서 gradle부분에
  복사해서 dependencies부분에 놓기 그리고 프로젝트이름에서 마우스 오른쪽
  거기서 gradle-refresh gradle

* 프로젝트 복사하거나 했을때 스프링관련 오류나면 gradle-refresh gradle하면 엔간하면 해결

* 현재 사용하고 있는 포트번호 알아볼땐 cmd에서 netstat -ano 치고 로컬주소 부분
  그리고 작업관리자 들어가서 pid보면 누가 뭘 쓰는지 알 수 있음

* src/main/java/ 모든 자바파일은 이 경로 밑으로
* src/main/resources/templates 모든 html파일은 여기 밑으로(밑에 폴더 더 만드는건 노상관)
* src/main/resources/static 밑에는 정적인 코드 
* 패키지 익스플로러 부분 빨리 익히기 

* static 쪽 데이터를 사용하는 방법
* appli.properties 밑에 로그를 쓰는 이유는 라이브러리 같은데서 값이 들어갔나보거나 결과값보기위함
    logging.level.root=info 가 달라질수 있음
    logging.level 뒷부분 확인(프로젝트때마다 매번 수정)

* 콘트롤러 클래스위에는 반드시 @Controller라고 입력해야함 
  콘트롤러 하는일 = 교통정리 이 명령 들어오면 뭐 실행하고 이런거

* 요청들어올때 public String index() {
		return "index";
	} 
   ()안에 값이 넘어오는 경우가 있음
   return되는 문자열은 두가지 html 파일이름 or 웹브라우저의 url

* html만 고치면 웹브라우저에서 새로고침만 하면 됨 자바 고치면 프로그램 끄고 재실행 
* 경로 받아주는 메소드 없으면 404 뜬다
* 경로는 세가지 1. 밖에서 보는경로(인터넷 주소창) 2. url관점에서의 경로 3. 하드디스크의 폴더 구조
                4. 스프링 내에서의 경로(폴더나 이런게 없다고 생각해야함)
* 컨트롤러 클래스 만들 때  
  @GetMapping("/test1") //요 경로명으로 들어오면 이걸 실행한다. 겹치는 주소 있으면 안됨
  원래는 이름을 그냥 넣는게 아니라 따로 클래스 만들어서 거기 경로 쫙지정해놓고 불러오는 식으로 사용
* http://localhost:8888/spring1/images/honoka.jpg 실제경로임
* 지금 작업할때는 절대경로가 아닌 상대경로로 하고 있음
* static 밑에있는건 남들에게 다 노출되어있는거(중요한거 넣으면 안됨)
  그래서 위에 저 이미지 경로가 되는듯?
* /로 시작하는게 절대경로인데 그걸 써버리면 /의 의미가 자바에서 썻을때랑 html에서 썻을때가 다른데
  spring1부분이 없기 때문에 그림이 안뜰거 넣으면 뜨긴뜰텐데 실제 서버에 올릴땐 그 주소가 없어지므로 다시 안뜸
  그래서 상대경로로 작업하는거임

*  자바에서의 /는 html에서의 

* url 기준에 따라 경로 잘 생각해야함

* localhost:8888/spring1/aaa/bbb
  localhost:8888/(html코드에서의 루트) spring1/(자바에서의 루트) aaa/bbb
  cotroller class의 return /는 template 밑의 경로를 의미
 

순서
index를 먼저설정해준다
1. index.html에서 test1으로 넘어가게 한다
  <a href = "test1">이미지 사용 예제</a>
2. TestController.java에서 @GetMapping("/test1")
  경로명으로 들어오면 return html 문서로 가서 실행
3. http://localhost:8888/spring1/test1 주소창엔 이렇게 뜸

* 한클래스에 컨트롤러는 하나만 가능한듯 하다



2023.01.04(수)

폴더 위치 탐색할때: show in - system explorer
@GetMapping : 명령이 들어오면 실행하는 것

http://localhost:8888/spring1/test1
http://localhost:8888/spring1/image/honoka.jpg 와 같은말

http://localhost:8888/spring1/test7

절대경로 상대경로 간단하게 생각하기

절대경로:절대경로는 고유한 경로입니다. 
         위의 예처럼 http://가 포함되어 있는 절대경로를 경로명만 웹브라우저 주소줄에 입력해도 그 이미지가 그대로 나옵니다.
         <img src="http://www.homejjang.com/images/tree00.gif>
         <img src="c:home\images\tree00.gif">
         다르게는 '그 위치'라는 개념이라고 말할 수 있는데 주소라고 생각하면 이해하기 더 쉽다.

상대경로: 상대경로는 이미지를 삽입할 HTML 문서를 기준으로 경로를 인식하는 방법입니다.
          이미지 파일이 HTML 문서와 같은 폴더에 있는지, 상위 폴더에 있는지, 하위 폴더에 있는지를 따져보고 경로를 지정해줘야 합니다.
          상대경로를 풀어서 보면 '현재 위치한 곳을 기준'으로 해서 '그곳의 위치'이다.
          다시한번 설명하자면 (Web이라고 기준하에) html 파일이 위치한 폴더를 기준으로 상대적인 경로라는 것.



2023.01.05(목)

home에 html 먼저 작성하고
controller에 메소드 만든다
view파일(보여줄 파일) html 만들어준다

우리가 만들어낸 가상의 경로가 외부에서는 인터넷 주소가 된다
컨트롤러 왼쪽에 열어놓고 오른쪽에 HTML파일 열어놔서 보면서 어떻게 움직이는지 파악하면 조금 알기 쉬운듯

get방식: 서버로 주소를 입력하거나 링크를 클릭하거나 폼입력하면 넘어간다
         넘어가는 파라미터가 다 노출되서 남들이 볼수있음
         짧은내용, 글자만으로 이루어진 내용, 남들이 봐도 되는 내용

post방식: 글자가 아닌 것, 보안됨, 길이 길어도 됨 폼이나 이런건 거의다 포스트 방식 사용

get인지 post인지 잘 모르겠으면 get임
405 오류는 get post 방식 실수했을때 


객체생성으로 포스트 방식으로 보내준다 (클래스 정의해서)
그러려면 클래스 만들고 vo만들듯이 해줘야함
Person p 이런식으로 해놓으면 그냥 알아서 해줌
콘트롤러 클래스를 기준으로 잡고 생각하면 post방식이던 get방식이던 받는다고 생각하면 편함(보내는거 ㄴㄴ)

객체 포스트방식 보내주는 순서
1. vo클래스 만든다
2. 변수만 정의 한다
3. 롬복 사이트 들어가서 stable 부분본다
4. @Data						       //세터게터 투스트링 등등 몇개의 역할을 다 포함
   @NoArgsConstructor			 //기본생성자
   @AllArgsConstructor 		 //생성자(모든 변수를 집어넣어 만드는 생성자)
5. 이렇게 하면 변수가 추가되거나 삭제되거나 변경되었거나 할때 메소드를 추가 시킬 필요가 없어진다.

@Slf4j
확인출력 이런거 쓰기 위함

입력폼 만드는거 다시연습

@Data @NoArgsConstructor @AllArgsConstructor

vo class에 무조건 삽입한다고 생각(롬복)
@Data
@NoArgsConstructor
@AllArgsConstructor

오늘 수업 3교시 다시듣고 정리좀 해놓기

* 로그파일 다 지우고 서버에 올릴때는
  application.properies에서
  
  logging.level.net.softsociety.spring2=debug
  디버그를 info로 바꿔준다
  다시 고칠땐 debug로 

* 콘솔쪽에 맨날 찍히는거 보기 싫으면
  #Logback 사용. 전체를 대상으로 로깅 레벨 지정
  #단계 : error>warn>info>debug>trace
  logging.level.root=info
  info를 error로 바꿔준다

자주해야하는건 메뉴얼로 만들어 놓기
설치 하는 방법부터 쫙
로복 추가하는 방법이라던지

로그 테스트를 할때는
	@GetMapping("/logtest")
	public String logtest() {
		
		String s = "어떤문자열";
	
		log.error("error");
		log.warn("warn");
		log.info("Info레벨의 출력");
		log.debug("디버깅시 사용: {}",s);
	
		return "/home";
	}
  클래스 만들어서 이런식으로

html에서는 
파일이 전송되어야 하는 경우 POST방식을 사용하면서!
form 태그의 옵션 중 enctype="multipart/form-data" 사용해야한다

2023.01.06(금)
오늘 한거는 thymeleaf문법
form만들때는 거의 post

리다이렉트와 포워딩의 차이
리다이렉트하면 주소가 바뀐다. 
리다이렉트 하면 아이디 비번 이런거 다 없어짐

웹프로그래밍에서 중요한 객체들은 중요한 객체만 선언해놓으면 알아서 만들어준다

모델을 간단하게 생각하면 오라클에서 만든 테이블 에서 우리가 셀렉한 내용을 사용자들에게 보여주는거
변수만 선언해놓고 기다리면 알아서 꽂아준다 스프링에서 제공해주는 모델이라는 클래스
서버에서 보여주고 싶은걸 모델에 담아서 보여줌
리다이렉트 하면 모델도 없어짐 포워딩을 해야 파라미터나 모델도 남음

thymeleaf 사용법 숙지하기 
thymeleaf 쓰는 이유는 서버에서 html보낼땐 프로그래밍이 필요한데 자바스크립트나 
이런걸로는 불가능 그래서 자바를 때려박아도 되지만 요즘은 안씀 그래서 
thymeleaf라는게 나와서 그걸 써준다

html태그에 추가
<p th:text="${}">
error 500은 보통 자바오류
error 화면 밑으로 내려다 보면 어디서 문제인지 대충 나옴
model.addAttribute

session
클라이언트의 정보를 서버에 저장 해놓고 확인하고 이런거(로그인)
클라이언트의 정보를 클라이언트의 컴터에 저장하는게 쿠키
맵구조를 만들어서 요청하면 서버에서 맵구조 확인하고 돌려줌
클라이언트마다 따로 만들어진다
서버 껏다 키거나 하면 지우고 다시
장바구니에 넣어놓고 사라진다 이러면 다 세션


모델과의 차이는 유지시간 
모델은 그냥 화면에만 출력 하는 짧은 유지시간
세션은 유지시켜야하는 정보를 출력할때 (로그인하는 동안 보여주는 페이지 이런거)

세션 - 저장하고 읽고 삭제
저장: session.setAttribute("id", "abc");


오늘한것
1. ParaController.java에 getmapping model 추가
2. SessionController.java 작성 후 네가지 경우 추가

모델 만드는 방법
1. home.html에 메뉴 추가
2. controller에 method 추가
3. 보여줄 html문서(model.html) 추가

세션 만드는 방법
1. home.html에 메뉴 추가
2. controller에 method 추가
   HttpSession 이라는 클래스를 이용해 변수를 선언
   세션정보를 이용할수 있는 객체를 스프링 부트가 전달을 해줌
   그럼 그작업을 읽거나 고치거나 저장하거나 이런걸 할 수 있는데
   변수명에 setAttribute라고 하는 method로 앞에 붙인게 이름 그 뒤는 그 이름의 모든객체를 저장
   그러면 이 이후로 어디를 가든 어느 페이지를 가던 id라는 이름으로 사용가능
   어딘가 그정보를 사용하고 싶을 때 html쪽에서 쓴다면 th:text="${session.id}" 이런식으로 사용

3. 보여줄 html문서(ss1.html) 추가
4. 다시 home.html로 돌아가서 ~~님 로그인 했습니다 이런 코드 만들어줌
5. controller에 경로 간단히 하기 위해 @RequestMapping("/session") 추가
6. 로그 보기 위하여 @Slf4j 추가


HttpSession 이라는 클래스를 이용해 변수를 선언


2023.01.09(월)

- 폼을 보여주고 버튼을 누르면 처리단계
- 코드가 밑으로 긴건 괜찮지만 옆으로 긴건 안됨 (변수를 한줄에 하나씩만)

로그인 만드는법
1. home화면에 추가
2. controller에서 보내주는 메소드 생성 
3. 로긴화면 html 생성
4. 포스트 방식으로 받고 세션에 저장하고 확인하는 메소드 생성

HttpServletRequest 
자바에서 웹개발할때 사용하는 클래스
HttpServletRequest req 선언하고 로그로 확인해보면 
log.debug("요청정보 : {}" , req.getRemoteAddr()); : 접속자의 ip주소를 알아내는 것

쿠키 사용하기
* 매우 제한적임
* 아주짧은 문자열만 저장가능 (영문 숫자 몇백자정도)
* 수명 지정 가능
* 그 컴퓨터에서만 며칠간 남아있는 정보
* 클라이언트 하드에 저장되는거고 클라이언트가 지워도 된다

쿠키만드는 법
쿠키라는 클래스로 그냥 뉴 쿠키하면 됨
문자열 두개 지정해야함 이름 하고 값
@GetMapping("/ck1")
	public String ck1() {
		//쿠키 생성(지금 만들어진건 서버에만 있는거)
		Cookie c1 = new Cookie("str","abcde");
		Cookie c2 = new Cookie("num","123");
		//쿠키 유지 시간(단위는 초, 계산 식을 써준다)
		c1.setMaxAge(60*60*24*3); 
		return "redirect:/";
	}
  응답정보 손대려고 할때에는 매서드의 매개변수 위치에 그냥 달라고 하면 됨()
  HttpServletResponse res <--이걸로
 
  그리고 가지고 가라는 명령어 쳐줌 res.addCookie(c1);

  @GetMapping("/ck1")
	public String ck1(HttpServletResponse res) {
		//쿠키 생성(지금 만들어진건 서버에만 있는거)
		Cookie c1 = new Cookie("str","abcde");
		Cookie c2 = new Cookie("num","123");
		
		//쿠키 유지 시간(단위는 초, 계산 식을 써준다)
		c1.setMaxAge(60*60*24*3);
		c2.setMaxAge(60*60*24*3);
		
		//응답정보에 쿠키 추가(그냥 가지말고 쿠키 가지고 가라)
		res.addCookie(c1);
		res.addCookie(c2);
		
		return "redirect:/"; //리턴될때 위의 쿠기가 가는것
	}
  크롬에서 확인해보면
  세개 저장되있다고 뜨는데 세션에도 하나를 저장하기 때문에 세개가 저장되있다고 뜨는거

쿠키 읽어올 때
	@GetMapping("/ck2")		//읽을땐 리퀘스트 정보에 딸려옴
	public String ck2(
			@CookieValue(name="str", defaultValue="없음") String str
			, @CookieValue(name="num", defaultValue="0") int num) {
//		변수선언을 해놓고 
//		어노테이션(요청이 들어왔으면 그 쿠기중에 이름이 str이라는걸 보여준다 근데 그런게 없으면 디폴트 값을 보여준다)
//		쓰고 이름과 디폴트 지정해준다
		
		log.debug("str 쿠키 값 : {}",str); 
		log.debug("num 쿠키 값 : {}",num);
		
		return "redirect:/";
	}

쿠키 삭제할때
@GetMapping("/ck3")
	// 메소드 정의 하고 쿠키 삭제하는 명령어는 따로 없음 
     쿠키저장하는거랑 방법 같음 
     쿠키 유지시간을 0으로 하고 add하면 덮어씌워지면서 삭제가 되는 개념
	// 이름이 str num인 쿠키를 생성한다
	// 유지시간을 0초로 지정한다
	// HttpServletResponse 객체를 통해 쿠키를 저장한다.(동시에 삭제된다)
  // 수정도 같은 방법으로 하면 된다.
	public String ck3(HttpServletResponse res) {
		
		Cookie c1 = new Cookie("str","null"); 그냥 null만 박아도 됨 ("str",null)
		Cookie c2 = new Cookie("num","5642");                       ("num",null)
		
		c1.setMaxAge(0);
		c2.setMaxAge(0);
		
		res.addCookie(c1);
		res.addCookie(c2);
		
		return "redirect:/";
	}

  경우에 따라 화면 달리보이게 하는건 thymeleaf기능을 사용하는데
  if문을 써서 한다
  태그에 추가해 주는 느낌
  th:if="${session.id !=null}" null이 아닐때만 보여준다


  2023.01.10(화)

  오늘하는것 중요함 잘 정리 해놓기
  thymeleaf 연습
  컨트롤러 클래스와 뷰 경로 새로 만듦
  자바에러는 500번

  이미지 넣을때 @RequestMapping("/th")지워버리면 경로가 달라져서 못찾음
  절대경로는 위험하고 상대경로는 만들기빡셈 그래서 쓰는게 타임리프에 있다

  http://localhost:8866/spring2/
  http://localhost:8866/spring2/th/thtest1
  http://localhost:8866/spring2/images/sakura.jpg

  html에서 절대경로를 쓰면
  http://localhost:8866/th/thtest1 이렇기 때문에 안쓴다

  <form th:action="@{/param/input1}" method="get"> 

  비교 표현식 줄임말
  eq - equal ( = )
  ne - not equal ( <> )
  lt - little ( < )
  le - little or equal ( <= )
  gt - greater ( > )
  ge - greater or equal ( >= )

  오늘한건
    thymeleaf 문법 정리
    thymeleaf 주석
    thymeleaf 출력
    thymeleaf 경로 
    thymeleaf 연산자
    thymeleaf 객체출력

2023.01.11(수)
thtest1은 서버에서 처리할 데이터
오라클(db)에서 할수있는건 다 해와라
컨트롤러에선 작업시키지 마라
html문서에서도 최대한 시키지 말아라

오늘한건
  thymeleaf 문자열 출력
  thymeleaf 리스트, 맵
  thymeleaf 제어문
  thymeleaf 반복문
  thymeleaf 테이블 관련


2023.01.12(목)
오늘 복습은 어제 반복문 부분부터
계산기 문제
눌렀을때 입력창 띄우고 숫자입력 받고 결과창 띄우게 하는것 까지는 성공
오늘 만든 계산기 다시한번 해보자

계산기 문제 흐름
1. 홈html에 가는거 추가해줌
2. 그걸 위해 컨트롤러 파일에서 view1으로 넘어가주는걸 getmapping으로 객체 하나 만들어줌
3. 그리고 view1에서 보여줄 html파일 만들고 자바스크립트로 오류 잡아줌
4. 컨트롤러 파일에 postmapping 객체 만들고 모델객체 추가
5. 스프링으로 계산부분 만들기
6. 모델.addAttribute 부분 만들어주고 리턴부분 만들어주고
7. 계산결과 html파일 만들어서 thymeleaf로 받아주기


2023.01.13(금)
하나만 뺄땐 charAt
여러개 뺄땐 substring(0,2) 0번은 포함되고 2는 안됨
                           0번부터 2개 느낌으로 생각하자(0,1)
스프링에 validation 이란게 있음 이걸 알아보자
선생님이 만들어준 코드 다시 해보기

spring2.zip (이름이 같은경우) import시키는 방법
압축을 풀어준다(workspace말고 다른곳에)
폴더 이름 바꿔준다 (폴더 이름만 바뀌었지 안에 설정들은 다 그냥 spring2로 되어있을것)
file - import - gradle - Existing Gradle project - next - next
- browser 버튼 - 경로 찾아서 폴더 선택 (아무것도 체크 안하고 next)- finish버튼
package에서 이름 바꿔준다 - setting.gradle 파일에서 프로젝트 명 변경
package에서 마우스 오른쪽 properties - java build path - libraries - jdk 수정(빨간딱지 있으면)
- edit - 세번째 workspace default jre 하고 finish 하고 나간다(java쪽 오류는 대부분 해결)

마우스 오른쪽 gradle - refresh gradle project
포트번호랑 로깅레벨 수정

[java doc 생성]
window - prefernce - general - content type - text - java properties file,java source file-
default encording UTF-8로 해주고 update

export
프로젝트명 우클릭 - export - java 밑에 java doc - java doc 경로명이(C:\Program Files\Java\jdk1.8.0_341\bin\javadoc.exe)인지 확인
- use standard doclet에서 저장할 경로 선택 - create javadoc~~ 에서 어디까지를 설명서로 만들건지 선택-
- 누구한테 보여줄땐 protected 개인이 쓸땐 private -
vm 옵션: -locale ko_KR -encoding UTF-8 -charset UTF-8 -docencoding UTF-8



230113 메모.txt

[ 같은 이름의 프로젝트 불러오기 ]
spring2.zip 파일 다운로드 
예)c:\java\spring2 경로로 압축 해제
폴더이름 변경 (spring2 -> spring22)
STS의 File메뉴 - import - Gradle - Existing Gradle Project
Next - Next
Browse버튼 - c:\java\spring2 선택 - Next - Finish
프로젝트 내의 settings.gradle 파일에서 프로젝트명 변경
프로젝트명 마우스 우클릭 - Properties - Java Build Path - Libraries - JDK 수정
application.properties 파일에서 PORT번호, 프로젝트 접속 경로 수정



[Java Doc 생성]
Window - Preferences - General - Content Types
Content Types에서 Java Properties File, Java Source File을
Default Encoding : UTF-8 -> Apply

프로젝트명 우클릭 - Export - Java - Javadoc 

VM옵션 : 	-locale ko_KR -encoding UTF-8 -charset UTF-8 -docencoding UTF-8


[SQL 복습]
테이블명이 person
컬럼은 주민등록번호(문자열 20byte), 이름(문자열 20byte), 나이 (숫자 3자리), 생일 (날짜)

111111-3333333, 홍길동 , 12, 11년 11월 11일 저장

이름이 홍길동인 사람 검색
나이가 20대인사람 검색


2023.01.16(월)
스프링과 오라클의 연동
베이스 패키지 : net.softsociety.spring3
컨트롤러 패키지 : net.softsociety.spring3.controller
vo클래스들 : net.softsociety.spring3.domain
서비스 : net.softsociety.spring3.service
DAO : net.softsociety.spring3.dao

java.lang.String 을 줄여서 string이라고 부르기위해 type alias(xml)
2시간째 수업 다시한번 들어보기

1. 패키지 정리 싹하고
2. HomeController홈컨트롤러 작성
3. home.html 작성
4. 오라클 파일 만들기(spring3example.txt)
5. PersonController 만들어서 getmapping 만들기
6. domain 밑에 Person.java로 VO파일 만들어주기
7. PersonController 에 Postmapping 만들기
8. insertForm.html 만들기
9. service 폴더에 PersonService.java 파일 생성
10. Person Controller 에 오토와이어(@Autowired) 어노테이션 추가
11. DAO에 PersonDAO.interface 다오에 인터페이스 파일 작성
12. resource패키지에 mappers 폴더 만들어주고 personMapper.xml 작성(일단 insert먼저)
13. 다시 PersonService로 돌아가서 다오 추가랑 밑에 int 부분 추가 @Autowired 어노테이션 추가
14. controller 파일에 service.insertPerson(person); 추가
15. 오라클가서 데이터 잘 들어가졌는지 확인해보기

@Autowired : 변수 앞에(여러개가 필요하면 다 붙여줘야함) 선언만하면 찾아다가 대입해준다 객체가 있는것만 사용가능

입력폼에서 출발해서 저장버튼 누르면 지정한 insert경로로 넘어가서
controller의 post방식의 insert로 옮 그때 따라오는게 민번 이름 나이가 퍼슨객체로 넘어옴
그리고 그 값을 서비스한테 저장하라고 넘겨줌(서비스 객체를 미리 만들어서 서비스어노테이션)

그림으로 다시 그려서 알아보기 3번째 수업 다시 들으면서


2023.01.17(화)
DAO의 interface파일과 mapper xml 파일 이름 맞는지 잘 보기
1교시 수업 다시 들어보자 중간에 놓침 초반에 10분정도

http:localhost:8888/spring3/insert 라는 주소에 대응 하는 메소드가 컨트롤러에 있어야 한다.

insertForm의 <form action="insert" method="post">는 
지금 같은곳에 있는메서드를 의미 
action="insert" 홈에서도 주소를 insert라고 줬는데 되는 이유는
하나는 겟이고 하나는 포스트니깐 다르게 받아들인다

오늘 한것
1. 주민번호로 delete 하는 방법
  1) 홈에서 html파일 만들어주고
  2) PersonController에서 겟메핑으로 추가
  3) PersonController에서 service.deletePerson(idnum); 만들어주고 오류난 부분 클릭해서 
  4) 서비스 부분에 메소드 만들어준다 (int)로 해야함
      public int deletePerson(String idnum) {
      int n = dao.deletePerson(idnum);
      return n;
      }
  5) 그리고 거기 오류난 부분 클릭해서 또 인터페이스로 넘어가서 만들어주고 
     public int deletePerson(String idnum);
  6) xml에 오라클에 줄 명령어 추가한다
      <delete id="deletePerson" parameterType="String">
      DELETE FROM person WHERE idnum = #{idnum}
      </delete>
      
겟방식이기 때문에 http:localhost:8888/spring3/delete?idnum=123123 이렇게 주소창에
그냥 쳐서 넣어도 지워진다
  

2. 이름으로 delete (방법은 위와 동일 단 xml부분이 다름)
  LIKE '%' || #{name} || '%' 이부분 외워놓기
  <!-- DELETE FROM person WHERE upper(name) LIKE '%' || upper(#{name}) || '%' -->
  대소문자 구별 안하고 다 대문자로 받게 하는것

3. 한사람에 관한 정보를 보는 것 (기본적인 방식은 동일)
    오라클에서 검색 방법: select * from person where idnum='1111';
  1) 홈에서 html파일 만들어주고
  2) PersonController에서 겟메핑으로 추가
  3) person 객체를 만들어서 모델에 담아준다 public String selectOne(String idnum, Model model)
  4) PersonController에서 Person person = service.selectOne(idnum); 만들어서 모델 객체를 서비스로 넘겨주고
  5) model에 객체 추가 model.addAttribute("person",person);
  6) 서비스랑 인터페이스 만들어주기 (모델이기 때문에 Person으로 받아줘야함 public Person selectOne 이런식으로)
  7) view html파일 만들어주고 거기로 리턴하도록한다
     모델을 html에서 출력할때는 <span th:text="${person.idnum}"></span></p> 이런식으로 해야함

  *객체명 잘 확인 객체 타입 잘 확인

  2023.01.18(수)
  오늘 1교시 수업 다시들어보자

  모든정보 조회
  홈html에 만들어준다
  컨트롤러에 겟메핑 방식으로 추가 파라미터는 모델만
  컨트롤러에 서비스 객체 추가 
  배열방식으로 추가
  모델에 넣을 값 추가 
  리턴
  서비스에 객체 추가
  다오로 보내줄것 추가
  select()부분 클릭해서 크리에이트 메소드해서 다오(인터페이스)만들어주기
  매퍼작성
  보여주는 html 작성
  html 자바스크립트 스타일 등 완성 잘보고 만들기

  보여주는 화면에서 삭제 시키기
  그냥 긁어와서 html파일에 넣어도 삭제됨
  html 파일 보자

  삭제 명령어 html부분 다시 확인
  오늘거 복습 반드시 잘 해야함 어려움

  수정하는법
  html파일에 추가 시키고
  컨트롤러에 겟타입으로 만든다(모델준비)
  보여줄 업데이트 폼 만든다 (여까진 선생이랑 같이함)
  컨트롤러에 수정한 데이터 처리할 코드 만들어준다(여부턴 내가)
  서비스 갔다가
  다오 갔다가
  xml파일 만들어준다


  *한개가 어떤타입인지가 resulttype 임 여러개면 메서드의 리턴값이 배열로 적어주면 됨


  2023.01.19(목)

  수정한 데이터 처리 
  기본 방식은 같음 (단 person객체로 받는거임)
  그냥 외워야 겠다 왜 다르지? 생각하지 말자
  컨트롤러->html->컨트롤러->서비스->다오->xml
  updatePerson을 사용한 이유는 그냥 정한것 위랑 같이 update써도 상관 ㄴㄴ

  방명록 만들기 
  오라클 
  글번호 num number pk int
  이름 varchar2(30) 필수입력 not null
  비밀번호 varchar2(20) 필수입력 not null
  내용 varchar2(2000) clob이라고 하는 대용량 타입이 있음
  날짜 자바에서 그냥 스트링으로

  테이블설계를 자바보다 먼저하는거임


  2023.01.25(수)
    4번예제 처음부터 5번은 해봐야한다. 보면서 해도 됨

    <!-- select로 읽었을때 나오는 한줄을 resulttype으로(guestbook이라는 객체로) or map  select 명령을 실행하면 guestbook이라는 객체로 받아달라는 뜻
		파라미터 타입 왜 없는지 못들음 다시 듣기-->
    xml부분

    <!-- 
		컨트롤러에 public String delete(String password)로 하고
		패스워드로 하고 parameterType을 "String" 으로 했을경우
		num=#{num} and password=#{password} 이게 둘다 스트링으로 되서
		예를들어 비밀번호 123여서 쳤는데 그럼 num에도 같은 값이 들어가버려서
    지워지지가 않음-->

    <input type="text" name="num" th:value="${gb.num}"> 
    만약 넘버값을 보이게 
    해놨다면 넘버값과 패스워드가 둘다 맞아야 지워진다


  2023.01.26(목)
  이 프로젝트는 따라하고 그 다음엔 기능 추가해서 새로 만들자

  새 프로젝트 작성 (자바 및 스프링 버젼 확인)
  그래이들 부분 관리 build setting
  어플리케이션 프로퍼티 관리
  홈컨트롤러 만들기
  홈 html만들기
  이런저런 문서들 넣을 폴더만들기
  sql 만들기, 그리고 텍스트 파일로 해서 저장해놓기
  패키지 기능별로 쪼개놓기(컨트롤러, 서비스, 다오, 도메인, 유틸, 시큐리티)

    패키지
        net.softsociety.spring5.controller
        net.softsociety.spring5.service
        net.softsociety.spring5.dao
        net.softsociety.spring5.domain
        net.softsociety.spring5.util
        net.softsociety.spring5.security
    콘트롤러
        MemberController
        BoardController
    서비스
        MemberService->MemberServieImpl
        BoardService->BoardServiceImpl
    DAO
        MemberDAO
        BoardDAO
    Mapper XML
        memberMapper.xml
        boardMapper.xml
    
    처음에 build.gradle에서 시큐리티관련 다 주석작업하고 해야함
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8' 도 주석처리
    
  html만 보여주는게 1단계
  홈 html에 경로 추가해놓기
  멤버컨트롤러 만들고 어노테이션 추가
  회원가입 폼으로 이동 컨트롤러
  회원가입 폼 html작성
  회원 저장할 컨트롤러 작성
  멤버 vo작성

  *그냥 로그에서만 확인하려면
    vo까지 작성하고
    서비스에 추가해주고
    다오에 추가해주고
    html폼에 이름 잘 맞추면 됨

  2023.01.27(금)
    select * from spring_member where id like 'a';
    select count(*) from spring5_member where id like 'a';

    오늘 한것
    아이디 서버에 저장
    아이디 중복확인을 하기 위한 정보 조회 
    아이디 중복확인
    자바스크립트에서 먼저 열 파일 만들고 거기서 지정해준 경로로 열 컨트롤러에 메소드
    만들어준다

  2023.01.30(월)
  오늘 한것
  id 중복확인하는거 if문 설정
  시큐리티 설정

  id 중복확인해서 겹치는 것 없으면 사용하기 javascript로 설정 
  흐름
   <p><input type="button" value="ID 사용하기" onclick="inputId()"></p> 를 통해 함수를 하나 만들어서
  
   내가 입력한 model.addAttribute("searchID",id); (스프링쪽에서)
   th:value="${searchID}"을 통해 js의 document.getElementById("id").value 요거에 넣고
   <th>ID</th>
                <td><input type="text" name="memberId" id="memberId" readonly="readonly"></td>
                <td><input type="button" value="중복확인" onclick="idcheck()"></td>
    첫페이지의 요부분에
    opener.document.getElementById("memberId").value 을 써서 값을 넣어준다
    그리고 this.close(); 해주면 창이 닫기면서 아이디를 사용할수 있어짐

  시큐리티 설정
  그레이들 주석 해제 및 리프레시
  html파일 멤버뷰에 넣어주기
  컨트롤러에 로그인폼으로 이동하기 위한 코드 작성
  시큐리티 폴더에 java파일 넣어주기 (설정파일)
  서비스 임플에서 비밀번호 암호화 추가
  @Autowired 
	PasswordEncoder encoder;
  스트링 변수선언
  
  2023.01.31(화)
  오늘하는거 시큐리티 관련 설정

  하는법
  1. member객체에 imple 추가
  2. 그리고 에러날텐데 오버라이딩을 다 해줘야한다
  3. getPassword(), getUsername() 은 return null해주면 안됨 memeber id, memeber pw를 리턴하게 해준다.
  4. @Override
	  public boolean isEnabled() {
		  return enabled;
	  } 추가해줘야함
  5. home.html 에 스프링 시큐리티를 쓰기위한 thymeleaf기능 추가
  6. <p sec:authorize="isAuthenticated()">로그인 중</p> p태그안에 추가해준다

   로그아웃은 딴거 필요없이 요안에 이것만 있으면 그냥 로그아웃된다
    <p><a th:href="@{logout}">로그아웃</a></p>

   로그아웃 경로 추가 
   홈 html에 로그아웃 경로 추가
   웹시큐리티에 .logout() 밑에
        .logoutUrl("/member/logout") 추가 url경로

    개인정보 수정
    home.html에 경로 생성
    컨트롤러에 이동 폼 작성
    mypageForm.html 작성(이번엔 그냥 joinform 복사함)
    읽기, 저장


  2023.02.01(수)
  수정할때 가장 먼저 할건 select임  
  오버라이딩: 상속받은걸 재정의 할 때 

  오늘 한것 

  개인정보 수정
  어제에 이어서
  컨트롤러 작성 
  서비스 임플에서 코드 작성
  컨트롤러에서 수정처리 코드 작성(보면 앎)
  서비스 다오 임플에 추가
  xml만들기

  비밀번호 수정
  xml문에 추가
  임플의 업데이트 부분에 추가

  탈퇴

   2023.02.02(목)
   로그인여부에 따라 화면이 다르게 나타나는건 html쪽에서 해야한다
   2/1강의 다시듣기
   타임리프 파일 경로 이리저리 바꿔보기
   1교시 수업 다시듣기
   오늘한거
    타임리프 관련 명령어들 정리
    게시판 만들기 위한 오라클 테이블 작성

  
   2023.02.03(금)
   
   2023.02.07(화)
   2교시 수업다시듣기 하나도 못들음
   오늘한거 파일 업로드
   application properties 업로드 추가
   html에 enctype="multipart/form-data" 추가
   컨트롤러에 MultipartFile upload 추가


  2023.02.08(수)
  오늘한거
  첨부파일 다운로드 및 게시판에 뜨게 만들기
  조회수는 매퍼에 업데이트로 하나 만들고 셀렉원 안에 있기때문에 서비스 임플이랑 다오에만 추가하면 됨
  오늘거 어려움 다시 들어보자 2교시
  그냥 따라쳐야할듯 봐도 모를듯
  3교시 수업을 다시 듣자 이게 총 복습

  
  2023.02.09(목)
  오늘한거 페이지 나오게 하는거
  검색기능 추가, 페이지 나누는것 추가
  페이지 나누는건 서비스 임플에서 만들어서 다오에만 추가해주면 됨
    
  2023.02.10(금)
  
  글 갯수 표시해주는것(게시판 밑에 12345)
  1. <select id="total" resultType="int">
		SELECT count(*) 
		FROM spring5_board
	</select>
  쿼리문에 추가해줌
  2. DAO에 map 추가
  //글 갯수
	public int total(HashMap<String,String>map);
  3. BoardServiceImpl에 추가
  4. application.properies에 #사용자 정의속성 추가
  5. controller에 추가
     //페이지 당 글 수
        @Value("${user.board.page}")
        int countPerPage;
        
        //페이지당 이동링크 수
        @Value("${user.board.group}")
        int pagePerGroup;
  6. PageNavigator.java 파일 복사해서 util에 넣어놓는다
  7. controller 글목록에 추가
  8. 서비스에 추가
  9. 임플에 오버라이딩및 코드 작성

  오늘거 무조건다시!!!!!!!!!!

  2023.02.13(월)
  삭제
  html 수정 자바스크립트 추가(지우시겠습니까?)
  컨트롤러에 삭제 메서드 작성
  자바스크립트엔 ||
  타임리프 th!!!

  2023.02.14(화)
  오늘하는거 리플달기
  댓글 출력할때는 컨트롤러 글 읽기에 추가해준다
  
  2023.02.15(수)
  스프링 5 복습 및 잘못된 코드들 수정
  (리플 삭제랑 리플 수정 글 삭제에서 사진 안없어지는 부분)

  스프링 다시만들어보는데
  첨에 로그인 하라고 뜰텐데 이거 다 주석처리해서 막아놓으면 됨
  application.properties랑 build.gradle부분

  

	

